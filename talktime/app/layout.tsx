import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ConvexClientProvider from "@/providers/ConvexClientProvider";
import { Tooltip, TooltipProvider } from "@radix-ui/react-tooltip";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "TalkTime App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased `}
      >
        <ConvexClientProvider>
          {/* 
            The ConvexClientProvider wraps the children components, allowing them to access the Convex client.
            This is where you would typically initialize your Convex client and pass it down to your components.
          */}
          <TooltipProvider>
            {children}
          </TooltipProvider>
        </ConvexClientProvider>



      </body>
    </html>
  );
}
